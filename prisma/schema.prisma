// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model LeatherColor {
  id           String     @id @default(cuid())
  name         String
  abbreviation String
  image_url    String?
  colorTags    ColorTag[] @relation("LeatherColorToTag")
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Shape {
  id            String         @id @default(cuid())
  name          String
  abbreviation  String?
  productPrices ProductPrice[] // Add this relation field
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Style {
  id           String   @id @default(cuid())
  name         String
  abbreviation String
  image_url    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Font {
  id        String   @id @default(cuid())
  name      String
  image_url String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Thread {
  id             String     @id @default(cuid())
  name           String
  abbreviation   String
  colorTags      ColorTag[] @relation("ThreadColorToTag")
  amann_number   String?
  isacord_number String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model ColorTag {
  id            String         @id @default(cuid())
  name          String         @unique
  leatherColors LeatherColor[] @relation("LeatherColorToTag")
  threadColors  Thread[]       @relation("ThreadColorToTag")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model ShopifyCollection {
  id                   String         @id @default(cuid())
  shopifyId            String
  admin_graphql_api_id String
  title                String
  handle               String
  productPrices        ProductPrice[]
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt

  @@unique([handle])
  @@map("ShopifyCollections")
}

model ProductPrice {
  id                  String             @id @default(cuid())
  shopifyPrice        Decimal            @db.Decimal(10, 2)
  higherPrice         Decimal            @db.Decimal(10, 2)
  shape               Shape              @relation(fields: [shapeId], references: [id])
  shapeId             String
  shopifyCollection   ShopifyCollection? @relation(fields: [shopifyCollectionId], references: [id])
  shopifyCollectionId String?
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
}
