generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model LeatherColor {
  id                      String     @id @default(cuid())
  name                    String
  abbreviation            String
  image_url               String?
  isLimitedEditionLeather Boolean    @default(false)
  createdAt               DateTime   @default(now())
  updatedAt               DateTime   @updatedAt
  colorTags               ColorTag[] @relation("LeatherColorToTag")
}

model Shape {
  id            String         @id @default(cuid())
  name          String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  abbreviation  String?
  productPrices ProductPrice[]
}

model Style {
  id           String   @id @default(cuid())
  name         String
  abbreviation String
  image_url    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Font {
  id        String   @id @default(cuid())
  name      String
  image_url String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ShopifyCollection {
  id                   String         @id @default(cuid())
  shopifyId            String
  title                String
  handle               String         @unique
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  admin_graphql_api_id String
  productPrices        ProductPrice[]

  @@map("ShopifyCollections")
}

model ProductPrice {
  id                  String             @id @default(cuid())
  shopifyPrice        Decimal            @db.Decimal(10, 2)
  higherPrice         Decimal            @db.Decimal(10, 2)
  shapeId             String
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  shopifyCollectionId String?
  shape               Shape              @relation(fields: [shapeId], references: [id])
  shopifyCollection   ShopifyCollection? @relation(fields: [shopifyCollectionId], references: [id])
}

model EmbroideryThread {
  id             String          @id @default(cuid())
  name           String
  abbreviation   String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  colorTags      ColorTag[]      @relation("EmbroideryThreadToTag")
  isacordNumbers IsacordNumber[]
}

model IsacordNumber {
  id        String           @id @default(cuid())
  number    String
  threadId  String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  thread    EmbroideryThread @relation(fields: [threadId], references: [id])

  @@index([threadId])
}

model StitchingThread {
  id           String        @id @default(cuid())
  name         String
  abbreviation String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  colorTags    ColorTag[]    @relation("StitchingThreadToTag")
  amannNumbers AmannNumber[]
}

model AmannNumber {
  id        String          @id @default(cuid())
  number    String
  threadId  String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  thread    StitchingThread @relation(fields: [threadId], references: [id])

  @@index([threadId])
}

model ColorTag {
  id               String             @id @default(cuid())
  name             String             @unique
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  embroideryColors EmbroideryThread[] @relation("EmbroideryThreadToTag")
  leatherColors    LeatherColor[]     @relation("LeatherColorToTag")
  stitchingColors  StitchingThread[]  @relation("StitchingThreadToTag")
}
